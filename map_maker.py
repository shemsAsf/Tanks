from tkinter.ttk import *
from tkinter import *
from tanksmodules.tanksutils import *
import os
import builtins


def Point_eq(self, other):
    return self.x == other.x and self.y == other.y
def Point_repr(self):
    return 'Point at '+str(~self)
Point.__repr__ = Point_repr
Point.__eq__ = Point_eq




def cond(a, b, c):
    if a:
        return b
    else:
        return c

def positive_or_nothing(value):
    if value > 0:
        return value
    else:
        return 0

def rng(a, b=None):
    if b == None:
        return builtins.range(a)
    elif a < b:
        return builtins.range(a)
    else:
        result = [i for i in builtins.range(b, a)]
        result.reverse()
        return result
    



DEFAULT_ROOT_GEOMETRY = Point(600, 400)
DEFAULT_ROOT_TITLE = 'Map Maker'

DEFAULT_GRID_SIZE = Point(24, 12)
DEFAULT_GRID_SIZE = Point(10, 10)
GRID_BG_COLOR = 'black'
GRID_REC_SIZE = 28
GRID_REC_MARGIN = 1
GRID_REC_SHOW_TEXT = False
GRID_REC_DISABLED_COLOR = 'grey19'
GRID_REC_SELECTED_COLOR = 'grey66'
GRID_REC_SUEPR_CLASS = Button
GRID_REC_STYLE = {
    'bg': GRID_REC_DISABLED_COLOR,
    'relief': FLAT,
    }
GRID_REC_PARAMS_SIZE = {
    'width': GRID_REC_SIZE-GRID_REC_MARGIN,
    'height': GRID_REC_SIZE-GRID_REC_MARGIN,
    }
DEFAULT_COLORS = [
    (0, GRID_REC_DISABLED_COLOR, ''),
    (1, 'khaki', 'aux_wall_profile3'),
    (2, 'sea green', 'aux_wall_profile1'),
    (3, 'steel blue', 'aux_wall_profile2'),
    ]

COLUMN_WIDTH = 330
COLUMN_HEIGHT = 700
COLUMN_COLOR = 'white'
COLUMN_MAGIN = 3
COLUMN_OFFSET = 10
GROUP_MARGIN = 30
ITEM_HEIGHT = 35
ITEM_MARGIN = 15

BT_SIZE_DEFAULT_TEXT = 'Changer la taille'
BT_SIZE_ERROR_TEXT = 'Le format demandé\nest incorrect'




class Rec(GRID_REC_SUEPR_CLASS):
    def __init__(self, master, **kwargs):
        super(__class__, self).__init__(**kwargs)
        self.grid_pos = Point(-1, -1)
    def click(self):
        rec_click(self)
        #grid_data[rec.grid_pos] = False

class StateButton(Button):
    def click(self):
        state_click(self)

def reset_grid_data():
    grid_data.clear()
    for x in range(DEFAULT_GRID_SIZE.x):
        for y in range(DEFAULT_GRID_SIZE.y):
            grid_data.update({(x, y):0})

def change_grid_size(new_size):
    if grid_size.x < new_size.x:
        for x in range(grid_size.x, new_size.x+1):
            for y in range(0, grid_size.y+1):
                grid_data.update({(x, y):0})
    elif grid_size.x > new_size.x:
        del_list = list()
        for pos in [Point(x, y) for x, y in grid_data]:
            if pos.x > new_size.x:
                del_list += [pos]
        for pos in del_list:
            del grid_data[~pos]
    grid_size.x = int(new_size.x)
    if grid_size.y < new_size.y:
        for y in range(grid_size.y, new_size.y+1):
            for x in range(0, grid_size.x+1):
                grid_data.update({(x, y):0})
    elif grid_size.y > new_size.y:
        del_list = list()
        for pos in [Point(x, y) for x, y in grid_data]:
            if pos.y > new_size.y:
                del_list += [pos]
        for pos in del_list:
            del grid_data[~pos]
    grid_size.y = int(new_size.y)

def resize():
    height = max(grid_size.y*GRID_REC_SIZE, COLUMN_HEIGHT)
    grid.place(x=0, y=0, width=grid_size.x*GRID_REC_SIZE, height=height)
    column.place(x=grid_size.x*GRID_REC_SIZE, y=0, width=COLUMN_WIDTH, height=height)
    root.geometry(str('x').join((str(i) for i in (grid_size.x*GRID_REC_SIZE+COLUMN_WIDTH, height))))
    lb_size.place(in_=column, x=COLUMN_MAGIN, y=height-3*ITEM_HEIGHT-ITEM_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)
    tx_result.place(in_=column, x=COLUMN_MAGIN, y=height-2*ITEM_HEIGHT, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=2*ITEM_HEIGHT-2)

def rec_click(rec):
    global selecting, selected_pos
    selecting = not selecting
    if selecting:
        selected_pos = Point(*rec.grid_pos)
        grid_recs[rec.grid_pos].configure(bg=GRID_REC_SELECTED_COLOR)
    else:
        rec_point = Point(*rec.grid_pos)
        for x in range(min(selected_pos.x, rec_point.x), max(selected_pos.x, rec_point.x)+1):
            for y in range(min(selected_pos.y, rec_point.y), max(selected_pos.y, rec_point.y)+1):            
                if grid_data[(x, y)] == 0:
                    grid_data[(x, y)] = selected_color[0]
                else:
                    grid_data[(x, y)] = 0
                if grid_data[(x, y)] > 0:
                    grid_recs[(x, y)].configure(bg=selected_color[1])
                else:
                    grid_recs[(x, y)].configure(bg=colors[0][1])

def draw():
    global grid_recs
    for pos in grid_recs:
        grid_recs[pos].destroy()
    grid_recs.clear()
    i = 0
    for x in range(grid_size.x):
        for y in range(grid_size.y):
            new = Rec(root, text=cond(GRID_REC_SHOW_TEXT, str(',').join((str(i) for i in (x, y))), cond(GRID_REC_SHOW_TEXT==None, str(x),  '')), **GRID_REC_STYLE)
            new.config(command=new.click)
            new.grid_pos = (x, y)
            new.place(x=x*GRID_REC_SIZE+GRID_REC_MARGIN, y=y*GRID_REC_SIZE+GRID_REC_MARGIN, in_=grid, **GRID_REC_PARAMS_SIZE)
            grid_recs.update({(x, y):new})
            i += 1
            grid_recs[(x, y)].configure(bg=colors[grid_data[(x, y)]][1])
            

def load_data(data=None):
    if not data:
        data = {}
    change_grid_size(Point(*[i for i in data][-1]))
    grid_data.update(data)
    resize()
    draw()

def state_click(bt):
    global selected_color
    selected_color = tuple(i for i in colors[int(bt.cget('text'))])
    

root = Tk()
root.title(DEFAULT_ROOT_TITLE)

grid = Frame(root, bg=GRID_BG_COLOR)
grid_size = Point(*~DEFAULT_GRID_SIZE)
colors = [i for i in DEFAULT_COLORS]
selected_color = colors[0]
grid_data = dict()
grid_recs = dict()
selecting = False
selected_pos = Point(-1, -1)

column = Frame(root, bg=COLUMN_COLOR)



def change_size(event=None):
    try:
        var = eval(ed_size.get('1.0', END))
        try:
            if len(var) == 2 and int(var[0]) > 0 and int(var[1]) > 0 and var != ~grid_size:
                change_grid_size(Point(*var))
                resize()
                draw()
        except:
            bt_size.config(text=BT_SIZE_ERROR_TEXT)
            root.after(1000, lambda:bt_size.config(text=BT_SIZE_DEFAULT_TEXT))
    except:
        bt_size.config(text=BT_SIZE_ERROR_TEXT)
        root.after(1000, lambda:bt_size.config(text=BT_SIZE_DEFAULT_TEXT))

def run_data(event=None):
    tx_result.delete('1.0', END)
    result = 'data = {\n'
    result += '\t\'title\': \'\'\n'
    result += '\t\'grid_size\': Point' + str(tuple(i+2 for i in ~grid_size)) + ',\n'
    result += '\t\'wall_list\': {'
    knonw_points = []
    for x in range(grid_size.x):
        for y in range(grid_size.y):
            if (x, y) not in knonw_points and grid_data[(x, y)] > 0:
                wall = ()
                a = 0
                while x + a < grid_size.x and grid_data[(x+a, y)] == grid_data[(x, y)]:
                    a += 1
                b = 0
                while y + b < grid_size.y and grid_data[(x, y+b)] == grid_data[(x, y)]:
                    b += 1
                if a > b:
                    for i in range(x, x+a):
                        knonw_points += [(i, y)]
                    result += f'\n\t\tCorners({x+1}, {y+1}, {x+a+1}, {y+2}): {colors[grid_data[(x, y)]][2]},'
                else:
                    for i in range(y, y+b):
                        knonw_points += [(x, i)]
                    result += f'\n\t\tCorners({x+1}, {y+1}, {x+2}, {y+b+1}): {colors[grid_data[(x, y)]][2]},'
    result += '\n\t\t},\n\t}\n'
    result = result.replace('\t', '    ')
    tx_result.config(state='normal')
    tx_result.delete('1.0', END)
    tx_result.insert(END, result)
    tx_result.config(state='disabled')

def apply_styles(event=None):
    global colors, state_buttons
    draw()
    for i in range(len(state_buttons)):
        state_buttons[0].destroy()
    state_buttons.clear()
    colors.clear()
    states = [i for i in ed_styles.get('1.0', END).split('\n') if i]
    for i, state in [(i, eval(states[i])) for i in range(len(states))]:
        newbutton = StateButton(root, text=str(i))
        newbutton.config(command=newbutton.click)
        newbutton.place(in_=fm_states, x=(i-1)*ITEM_HEIGHT, y=0, width=ITEM_HEIGHT, height=ITEM_HEIGHT)
        state_buttons += [newbutton]
        colors += (state, )
    state_buttons[0].destroy()

def show_win(event=None):
    win = Tk()
    win.title('Données')
    def openfile():
        import tkinter.filedialog
        import os
        path = tkinter.filedialog.askopenfilename()
        file = r'_path = \'tanksdata\images\ext\\' + str(os.path.basename(path)) + '\n_adress = ' + str(path) + '\n_bytes = '
        with open(path, 'rb') as f:
            file += str(f.read()) + '''\n\nimport os\nif os.path.exists(_adress):\n\tflag = 'wb'\nelse:\n\tflag = 'xb'\nwith open(_adress, flag) as f:\n\tf.write(_bytes)'''
        ed.config(state='normal')
        ed.delete('1.0', END)
        ed.insert(END, file)
        win.clipboard_clear()
        win.clipboard_append(file)
        ed.config(state='disabled')
    bt = Button(win, text='Ouvrir', command=openfile, height=2)
    bt.pack(side=TOP, fill=X, expand=True)
    ed = Text(win)
    #ed.pack(fill=BOTH, expand=True)
    win.mainloop()


    

groups = -1
items = -1
margins = -1


groups += 1

items += 1
margins += 1
lb_size = Label(root, text='Taille de la grille "x,y" :', anchor='w', bg='SystemButtonFace')
lb_size.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)

items += 1
margins += 1
ed_size = Text(root)
ed_size.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)

items += 1
margins += 1
bt_size = Button(root, text=BT_SIZE_DEFAULT_TEXT, relief=FLAT, command=change_size)
bt_size.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)

groups += 1

items += 1
margins += 1
lb_styles = Label(root, text='Etats :', anchor='w', bg='SystemButtonFace')
lb_styles.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)

items += 1
margins += 1
ed_styles = Text(root)
ed_styles.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=2*ITEM_HEIGHT)
items += 1

items += 1
margins += 1
bt_styles = Button(root, text='Appliquer', relief=FLAT, command=apply_styles)
bt_styles.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)


groups += 1
items += 1
margins += 1
fm_states = Frame(root)
fm_states.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)
state_buttons = list()

groups += 1
items += 1
margins += 1
bt_win = Button(root, text='Récupérer un fichier brut', relief=FLAT, command=show_win)
bt_win.place(in_=column, x=COLUMN_MAGIN, y=COLUMN_OFFSET+items*ITEM_HEIGHT+positive_or_nothing(margins)*ITEM_MARGIN+groups*GROUP_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)
state_buttons = list()

items += 1
margins += 1
lb_size = Button(root, text='Données :', command=run_data, relief=FLAT)#, bg=COLUMN_COLOR)
lb_size.place(in_=column, x=COLUMN_MAGIN, y=root.winfo_height()-3*ITEM_HEIGHT-ITEM_MARGIN, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=ITEM_HEIGHT)

items += 1
margins += 1
tx_result = Text(root, state='disabled', font=('Calibri', 6))
tx_result.place(in_=column, x=COLUMN_MAGIN, y=root.winfo_height()-2*ITEM_HEIGHT, width=-2*COLUMN_MAGIN+COLUMN_WIDTH, height=2*ITEM_HEIGHT)


if True:
    ed_size.insert(END, str(~grid_size).replace('(', '').replace(')', ''))
    ed_styles.insert(END, str('').join([str(colors)[i] for i in range(len(str(colors))-0)]).replace('), ', ')\n').replace(' (', '').replace('[', '').replace(']', ''))
    reset_grid_data()
    change_grid_size(grid_size)
    resize()
    draw()
    apply_styles()
    selected_color = colors[1]
data = """
alpha = {(0, 0): False, (0, 1): False, (0, 2): False, (0, 3): False, (0, 4): False, (0, 5): False, (0, 6): False, (0, 7): False, (0, 8): False, (0, 9): False, (1, 0): False, (1, 1): True, (1, 2): True, (1, 3): True, (1, 4): True, (1, 5): True, (1, 6): False, (1, 7): True, (1, 8): True, (1, 9): True, (2, 0): False, (2, 1): True, (2, 2): False, (2, 3): True, (2, 4): False, (2, 5): False, (2, 6): False, (2, 7): False, (2, 8): False, (2, 9): True, (3, 0): False, (3, 1): True, (3, 2): True, (3, 3): True, (3, 4): True, (3, 5): True, (3, 6): False, (3, 7): True, (3, 8): True, (3, 9): False, (4, 0): False, (4, 1): False, (4, 2): False, (4, 3): False, (4, 4): False, (4, 5): False, (4, 6): False, (4, 7): False, (4, 8): False, (4, 9): False, (5, 0): False, (5, 1): True, (5, 2): True, (5, 3): True, (5, 4): True, (5, 5): True, (5, 6): False, (5, 7): True, (5, 8): True, (5, 9): True, (6, 0): False, (6, 1): True, (6, 2): False, (6, 3): True, (6, 4): False, (6, 5): True, (6, 6): False, (6, 7): False, (6, 8): False, (6, 9): False, (7, 0): False, (7, 1): False, (7, 2): True, (7, 3): False, (7, 4): True, (7, 5): False, (7, 6): False, (7, 7): False, (7, 8): False, (7, 9): False, (8, 0): False, (8, 1): False, (8, 2): False, (8, 3): False, (8, 4): False, (8, 5): False, (8, 6): False, (8, 7): False, (8, 8): False, (8, 9): False, (9, 0): False, (9, 1): True, (9, 2): True, (9, 3): True, (9, 4): True, (9, 5): True, (9, 6): False, (9, 7): True, (9, 8): True, (9, 9): True, (10, 0): False, (10, 1): True, (10, 2): False, (10, 3): False, (10, 4): False, (10, 5): True, (10, 6): False, (10, 7): False, (10, 8): True, (10, 9): False, (10, 10): False, (11, 0): False, (11, 1): True, (11, 2): False, (11, 3): False, (11, 4): False, (11, 5): True, (11, 6): False, (11, 7): True, (11, 8): True, (11, 9): True, (11, 10): True, (12, 0): False, (12, 1): False, (12, 2): False, (12, 3): False, (12, 4): False, (12, 5): False, (12, 6): False, (12, 7): False, (12, 8): False, (12, 9): False, (12, 10): False, (13, 0): False, (13, 1): True, (13, 2): True, (13, 3): True, (13, 4): True, (13, 5): True, (13, 6): False, (13, 7): True, (13, 8): True, (13, 9): True, (13, 10): True, (14, 0): False, (14, 1): True, (14, 2): False, (14, 3): False, (14, 4): False, (14, 5): True, (14, 6): False, (14, 7): False, (14, 8): True, (14, 9): True, (14, 10): True, (15, 0): False, (15, 1): False, (15, 2): True, (15, 3): True, (15, 4): True, (15, 5): False, (15, 6): False, (15, 7): True, (15, 8): True, (15, 9): True, (15, 10): True, (16, 0): False, (16, 1): False, (16, 2): False, (16, 3): False, (16, 4): False, (16, 5): False, (16, 6): False, (16, 7): False, (16, 8): False, (16, 9): False, (16, 10): False, (17, 0): False, (17, 1): True, (17, 2): True, (17, 3): True, (17, 4): True, (17, 5): True, (17, 6): False, (17, 7): True, (17, 8): True, (17, 9): True, (17, 10): True, (18, 0): False, (18, 1): True, (18, 2): False, (18, 3): True, (18, 4): False, (18, 5): True, (18, 6): False, (18, 7): True, (18, 8): False, (18, 9): False, (18, 10): False, (19, 0): False, (19, 1): True, (19, 2): False, (19, 3): True, (19, 4): False, (19, 5): True, (19, 6): False, (19, 7): True, (19, 8): True, (19, 9): True, (19, 10): True, (20, 0): False, (20, 1): False, (20, 2): False, (20, 3): False, (20, 4): False, (20, 5): False, (20, 6): False, (20, 7): False, (20, 8): False, (20, 9): False, (20, 10): False, (21, 0): False, (21, 1): True, (21, 2): True, (21, 3): True, (21, 4): True, (21, 5): True, (21, 6): False, (21, 7): True, (21, 8): True, (21, 9): True, (21, 10): True, (22, 0): False, (22, 1): True, (22, 2): False, (22, 3): True, (22, 4): False, (22, 5): False, (22, 6): False, (22, 7): True, (22, 8): False, (22, 9): True, (22, 10): False, (23, 0): False, (23, 1): True, (23, 2): False, (23, 3): True, (23, 4): False, (23, 5): False, (23, 6): False, (23, 7): True, (23, 8): True, (23, 9): True, (23, 10): False, (24, 0): False, (24, 1): False, (24, 2): False, (24, 3): False, (24, 4): False, (24, 5): False, (24, 6): False, (24, 7): False, (24, 8): False, (24, 9): False, (24, 10): False, (25, 0): False, (25, 1): True, (25, 2): True, (25, 3): True, (25, 4): True, (25, 5): True, (25, 6): False, (25, 7): True, (25, 8): True, (25, 9): True, (25, 10): True, (26, 0): False, (26, 1): True, (26, 2): False, (26, 3): False, (26, 4): False, (26, 5): True, (26, 6): False, (26, 7): True, (26, 8): False, (26, 9): False, (26, 10): True, (27, 0): False, (27, 1): True, (27, 2): False, (27, 3): True, (27, 4): True, (27, 5): True, (27, 6): False, (27, 7): True, (27, 8): True, (27, 9): True, (27, 10): True, (28, 0): False, (28, 1): False, (28, 2): False, (28, 3): False, (28, 4): False, (28, 5): False, (28, 6): False, (28, 7): False, (28, 8): False, (28, 9): False, (28, 10): False, (29, 0): False, (29, 1): True, (29, 2): True, (29, 3): True, (29, 4): True, (29, 5): True, (29, 6): False, (29, 7): True, (29, 8): True, (29, 9): True, (29, 10): True, (30, 0): False, (30, 1): False, (30, 2): False, (30, 3): True, (30, 4): False, (30, 5): False, (30, 6): False, (30, 7): True, (30, 8): False, (30, 9): True, (30, 10): False, (31, 0): False, (31, 1): True, (31, 2): True, (31, 3): True, (31, 4): True, (31, 5): True, (31, 6): False, (31, 7): True, (31, 8): True, (31, 9): False, (31, 10): True, (32, 0): False, (32, 1): False, (32, 2): False, (32, 3): False, (32, 4): False, (32, 5): False, (32, 6): False, (32, 7): False, (32, 8): False, (32, 9): False, (32, 10): False, (33, 0): False, (33, 1): True, (33, 2): False, (33, 3): False, (33, 4): False, (33, 5): True, (33, 6): False, (33, 7): True, (33, 8): True, (33, 9): True, (33, 10): False, (34, 0): False, (34, 1): True, (34, 2): True, (34, 3): True, (34, 4): True, (34, 5): True, (34, 6): False, (34, 7): True, (34, 8): False, (34, 9): True, (34, 10): False, (35, 0): False, (35, 1): True, (35, 2): False, (35, 3): False, (35, 4): False, (35, 5): True, (35, 6): False, (35, 7): True, (35, 8): False, (35, 9): True, (35, 10): True, (36, 0): False, (36, 1): False, (36, 2): False, (36, 3): False, (36, 4): False, (36, 5): False, (36, 6): False, (36, 7): False, (36, 8): False, (36, 9): False, (36, 10): False, (37, 0): False, (37, 1): True, (37, 2): False, (37, 3): False, (37, 4): False, (37, 5): True, (37, 6): False, (37, 7): True, (37, 8): False, (37, 9): False, (37, 10): False, (38, 0): False, (38, 1): True, (38, 2): True, (38, 3): True, (38, 4): True, (38, 5): True, (38, 6): False, (38, 7): True, (38, 8): True, (38, 9): True, (38, 10): True, (39, 0): False, (39, 1): True, (39, 2): False, (39, 3): False, (39, 4): False, (39, 5): False, (39, 6): False, (39, 7): True, (39, 8): False, (39, 9): False, (39, 10): False, (40, 0): False, (40, 1): False, (40, 2): False, (40, 3): False, (40, 4): False, (40, 5): False, (40, 6): False, (40, 7): False, (40, 8): False, (40, 9): False, (40, 10): False, (0, 10): False, (1, 10): True, (2, 10): False, (3, 10): True, (4, 10): False, (5, 10): True, (6, 10): False, (7, 10): False, (8, 10): False, (9, 10): True, (0, 11): False, (1, 11): True, (2, 11): False, (3, 11): True, (4, 11): False, (5, 11): True, (6, 11): True, (7, 11): True, (8, 11): False, (9, 11): True, (10, 11): False, (11, 11): True, (12, 11): False, (13, 11): True, (14, 11): False, (15, 11): True, (16, 11): False, (17, 11): True, (18, 11): True, (19, 11): True, (20, 11): False, (21, 11): True, (22, 11): False, (23, 11): False, (24, 11): False, (25, 11): False, (26, 11): True, (27, 11): True, (28, 11): False, (29, 11): True, (30, 11): False, (31, 11): True, (32, 11): False, (33, 11): True, (34, 11): True, (35, 11): True, (36, 11): False, (37, 11): False, (38, 11): True, (39, 11): False, (40, 11): False, (0, 12): False, (1, 12): False, (2, 12): False, (3, 12): False, (4, 12): False, (5, 12): False, (6, 12): False, (7, 12): False, (8, 12): False, (9, 12): False, (10, 12): False, (11, 12): False, (12, 12): False, (13, 12): False, (14, 12): False, (15, 12): False, (16, 12): False, (17, 12): False, (18, 12): False, (19, 12): False, (20, 12): False, (21, 12): False, (22, 12): False, (23, 12): False, (24, 12): False, (25, 12): False, (26, 12): False, (27, 12): False, (28, 12): False, (29, 12): False, (30, 12): False, (31, 12): False, (32, 12): False, (33, 12): False, (34, 12): False, (35, 12): False, (36, 12): False, (37, 12): False, (38, 12): False, (39, 12): False, (40, 12): False, (0, 13): False, (1, 13): True, (2, 13): False, (3, 13): True, (4, 13): False, (5, 13): True, (6, 13): False, (7, 13): True, (8, 13): False, (9, 13): True, (10, 13): False, (11, 13): True, (12, 13): False, (13, 13): True, (14, 13): False, (15, 13): True, (16, 13): False, (17, 13): True, (18, 13): False, (19, 13): True, (20, 13): False, (21, 13): True, (22, 13): True, (23, 13): True, (24, 13): False, (25, 13): False, (26, 13): False, (27, 13): False, (28, 13): False, (29, 13): False, (30, 13): False, (31, 13): False, (32, 13): False, (33, 13): False, (34, 13): False, (35, 13): False, (36, 13): False, (37, 13): False, (38, 13): False, (39, 13): False, (40, 13): False, (0, 14): False, (1, 14): True, (2, 14): False, (3, 14): True, (4, 14): False, (5, 14): True, (6, 14): False, (7, 14): True, (8, 14): False, (9, 14): True, (10, 14): False, (11, 14): True, (12, 14): False, (13, 14): True, (14, 14): True, (15, 14): True, (16, 14): False, (17, 14): True, (18, 14): False, (19, 14): True, (20, 14): False, (21, 14): False, (22, 14): False, (23, 14): True, (24, 14): False, (25, 14): False, (26, 14): False, (27, 14): False, (28, 14): False, (29, 14): False, (30, 14): False, (31, 14): False, (32, 14): False, (33, 14): False, (34, 14): False, (35, 14): False, (36, 14): False, (37, 14): False, (38, 14): False, (39, 14): False, (40, 14): False, (41, 0): False, (41, 1): False, (41, 2): False, (41, 3): False, (41, 4): False, (41, 5): False, (41, 6): False, (41, 7): False, (41, 8): False, (41, 9): False, (41, 10): False, (41, 11): False, (41, 12): False, (41, 13): False, (41, 14): False, (0, 15): False, (1, 15): True, (2, 15): False, (3, 15): True, (4, 15): False, (5, 15): True, (6, 15): False, (7, 15): True, (8, 15): False, (9, 15): True, (10, 15): False, (11, 15): True, (12, 15): False, (13, 15): False, (14, 15): True, (15, 15): False, (16, 15): False, (17, 15): True, (18, 15): True, (19, 15): True, (20, 15): False, (21, 15): False, (22, 15): True, (23, 15): False, (24, 15): False, (25, 15): False, (26, 15): False, (27, 15): False, (28, 15): False, (29, 15): False, (30, 15): False, (31, 15): False, (32, 15): False, (33, 15): False, (34, 15): False, (35, 15): False, (36, 15): False, (37, 15): False, (38, 15): False, (39, 15): False, (40, 15): False, (41, 15): False, (0, 16): False, (1, 16): True, (2, 16): False, (3, 16): True, (4, 16): False, (5, 16): True, (6, 16): False, (7, 16): True, (8, 16): False, (9, 16): True, (10, 16): True, (11, 16): True, (12, 16): False, (13, 16): True, (14, 16): True, (15, 16): True, (16, 16): False, (17, 16): False, (18, 16): True, (19, 16): False, (20, 16): False, (21, 16): True, (22, 16): False, (23, 16): False, (24, 16): False, (25, 16): False, (26, 16): False, (27, 16): False, (28, 16): False, (29, 16): False, (30, 16): False, (31, 16): False, (32, 16): False, (33, 16): False, (34, 16): False, (35, 16): False, (36, 16): False, (37, 16): False, (38, 16): False, (39, 16): False, (40, 16): False, (41, 16): False, (0, 17): False, (1, 17): True, (2, 17): True, (3, 17): True, (4, 17): False, (5, 17): False, (6, 17): True, (7, 17): False, (8, 17): False, (9, 17): True, (10, 17): False, (11, 17): True, (12, 17): False, (13, 17): True, (14, 17): False, (15, 17): True, (16, 17): False, (17, 17): False, (18, 17): True, (19, 17): False, (20, 17): False, (21, 17): True, (22, 17): True, (23, 17): True, (24, 17): False, (25, 17): False, (26, 17): False, (27, 17): False, (28, 17): False, (29, 17): False, (30, 17): False, (31, 17): False, (32, 17): False, (33, 17): False, (34, 17): False, (35, 17): False, (36, 17): False, (37, 17): False, (38, 17): False, (39, 17): False, (40, 17): False, (41, 17): False, (0, 18): False, (1, 18): False, (2, 18): False, (3, 18): False, (4, 18): False, (5, 18): False, (6, 18): False, (7, 18): False, (8, 18): False, (9, 18): False, (10, 18): False, (11, 18): False, (12, 18): False, (13, 18): False, (14, 18): False, (15, 18): False, (16, 18): False, (17, 18): False, (18, 18): False, (19, 18): False, (20, 18): False, (21, 18): False, (22, 18): False, (23, 18): False, (24, 18): False, (25, 18): False, (26, 18): False, (27, 18): False, (28, 18): False, (29, 18): False, (30, 18): False, (31, 18): False, (32, 18): False, (33, 18): False, (34, 18): False, (35, 18): False, (36, 18): False, (37, 18): False, (38, 18): False, (39, 18): False, (40, 18): False, (41, 18): False, (0, 19): False, (1, 19): False, (2, 19): False, (3, 19): False, (4, 19): False, (5, 19): False, (6, 19): False, (7, 19): False, (8, 19): False, (9, 19): False, (10, 19): False, (11, 19): False, (12, 19): False, (13, 19): False, (14, 19): False, (15, 19): False, (16, 19): False, (17, 19): False, (18, 19): False, (19, 19): False, (20, 19): False, (21, 19): False, (22, 19): False, (23, 19): False, (24, 19): False, (25, 19): False, (26, 19): False, (27, 19): False, (28, 19): False, (29, 19): False, (30, 19): False, (31, 19): False, (32, 19): False, (33, 19): False, (34, 19): False, (35, 19): False, (36, 19): False, (37, 19): False, (38, 19): False, (39, 19): False, (40, 19): False, (41, 19): False}    
AEB = {(0, 0): False, (0, 1): False, (0, 2): False, (0, 3): False, (0, 4): False, (0, 5): False, (0, 6): False, (0, 7): False, (0, 8): False, (0, 9): False, (1, 0): False, (1, 1): False, (1, 2): False, (1, 3): False, (1, 4): False, (1, 5): False, (1, 6): False, (1, 7): False, (1, 8): False, (1, 9): False, (2, 0): False, (2, 1): False, (2, 2): False, (2, 3): False, (2, 4): False, (2, 5): False, (2, 6): False, (2, 7): False, (2, 8): False, (2, 9): False, (3, 0): False, (3, 1): False, (3, 2): False, (3, 3): False, (3, 4): False, (3, 5): False, (3, 6): False, (3, 7): False, (3, 8): False, (3, 9): False, (4, 0): False, (4, 1): False, (4, 2): False, (4, 3): False, (4, 4): False, (4, 5): False, (4, 6): False, (4, 7): False, (4, 8): False, (4, 9): False, (5, 0): False, (5, 1): False, (5, 2): False, (5, 3): False, (5, 4): False, (5, 5): False, (5, 6): False, (5, 7): False, (5, 8): False, (5, 9): False, (6, 0): False, (6, 1): False, (6, 2): False, (6, 3): False, (6, 4): False, (6, 5): False, (6, 6): False, (6, 7): False, (6, 8): False, (6, 9): False, (7, 0): False, (7, 1): False, (7, 2): False, (7, 3): False, (7, 4): False, (7, 5): False, (7, 6): False, (7, 7): False, (7, 8): False, (7, 9): False, (8, 0): False, (8, 1): False, (8, 2): False, (8, 3): False, (8, 4): False, (8, 5): False, (8, 6): False, (8, 7): False, (8, 8): False, (8, 9): False, (9, 0): False, (9, 1): False, (9, 2): False, (9, 3): False, (9, 4): False, (9, 5): False, (9, 6): False, (9, 7): False, (9, 8): False, (9, 9): False, (10, 0): False, (10, 1): False, (10, 2): False, (10, 3): False, (10, 4): False, (10, 5): False, (10, 6): False, (10, 7): False, (10, 8): False, (10, 9): False, (10, 10): False, (11, 0): False, (11, 1): False, (11, 2): False, (11, 3): False, (11, 4): False, (11, 5): False, (11, 6): False, (11, 7): False, (11, 8): False, (11, 9): False, (11, 10): False, (12, 0): False, (12, 1): False, (12, 2): False, (12, 3): False, (12, 4): False, (12, 5): False, (12, 6): False, (12, 7): False, (12, 8): False, (12, 9): False, (12, 10): False, (13, 0): False, (13, 1): False, (13, 2): False, (13, 3): False, (13, 4): False, (13, 5): False, (13, 6): False, (13, 7): False, (13, 8): False, (13, 9): False, (13, 10): False, (14, 0): False, (14, 1): False, (14, 2): False, (14, 3): False, (14, 4): False, (14, 5): False, (14, 6): False, (14, 7): False, (14, 8): False, (14, 9): False, (14, 10): False, (15, 0): False, (15, 1): False, (15, 2): False, (15, 3): False, (15, 4): False, (15, 5): False, (15, 6): False, (15, 7): False, (15, 8): False, (15, 9): False, (15, 10): False, (16, 0): False, (16, 1): False, (16, 2): False, (16, 3): False, (16, 4): False, (16, 5): False, (16, 6): False, (16, 7): False, (16, 8): False, (16, 9): False, (16, 10): False, (17, 0): False, (17, 1): False, (17, 2): False, (17, 3): False, (17, 4): False, (17, 5): False, (17, 6): False, (17, 7): False, (17, 8): False, (17, 9): False, (17, 10): False, (18, 0): False, (18, 1): False, (18, 2): False, (18, 3): False, (18, 4): False, (18, 5): False, (18, 6): False, (18, 7): False, (18, 8): False, (18, 9): False, (18, 10): False, (19, 0): False, (19, 1): False, (19, 2): False, (19, 3): False, (19, 4): False, (19, 5): False, (19, 6): False, (19, 7): False, (19, 8): False, (19, 9): False, (19, 10): False, (20, 0): False, (20, 1): False, (20, 2): False, (20, 3): False, (20, 4): False, (20, 5): False, (20, 6): False, (20, 7): False, (20, 8): False, (20, 9): False, (20, 10): False, (21, 0): False, (21, 1): False, (21, 2): False, (21, 3): False, (21, 4): False, (21, 5): False, (21, 6): False, (21, 7): False, (21, 8): False, (21, 9): False, (21, 10): False, (22, 0): False, (22, 1): False, (22, 2): False, (22, 3): False, (22, 4): False, (22, 5): False, (22, 6): False, (22, 7): False, (22, 8): False, (22, 9): False, (22, 10): False, (23, 0): False, (23, 1): False, (23, 2): False, (23, 3): False, (23, 4): False, (23, 5): False, (23, 6): False, (23, 7): False, (23, 8): False, (23, 9): False, (23, 10): False, (24, 0): False, (24, 1): False, (24, 2): False, (24, 3): False, (24, 4): False, (24, 5): False, (24, 6): False, (24, 7): False, (24, 8): False, (24, 9): False, (24, 10): False, (25, 0): False, (25, 1): False, (25, 2): False, (25, 3): False, (25, 4): False, (25, 5): False, (25, 6): False, (25, 7): False, (25, 8): False, (25, 9): False, (25, 10): False, (26, 0): False, (26, 1): False, (26, 2): False, (26, 3): False, (26, 4): False, (26, 5): False, (26, 6): False, (26, 7): False, (26, 8): False, (26, 9): False, (26, 10): False, (27, 0): False, (27, 1): False, (27, 2): False, (27, 3): False, (27, 4): False, (27, 5): False, (27, 6): False, (27, 7): False, (27, 8): False, (27, 9): False, (27, 10): False, (28, 0): False, (28, 1): False, (28, 2): False, (28, 3): False, (28, 4): False, (28, 5): False, (28, 6): False, (28, 7): False, (28, 8): False, (28, 9): False, (28, 10): False, (29, 0): False, (29, 1): False, (29, 2): False, (29, 3): False, (29, 4): False, (29, 5): False, (29, 6): False, (29, 7): False, (29, 8): False, (29, 9): False, (29, 10): False, (30, 0): False, (30, 1): False, (30, 2): False, (30, 3): False, (30, 4): False, (30, 5): False, (30, 6): False, (30, 7): False, (30, 8): False, (30, 9): False, (30, 10): False, (31, 0): False, (31, 1): False, (31, 2): False, (31, 3): False, (31, 4): False, (31, 5): True, (31, 6): True, (31, 7): True, (31, 8): True, (31, 9): True, (31, 10): False, (32, 0): False, (32, 1): False, (32, 2): False, (32, 3): False, (32, 4): False, (32, 5): True, (32, 6): False, (32, 7): True, (32, 8): False, (32, 9): False, (32, 10): False, (33, 0): False, (33, 1): False, (33, 2): False, (33, 3): False, (33, 4): False, (33, 5): True, (33, 6): True, (33, 7): True, (33, 8): True, (33, 9): True, (33, 10): False, (34, 0): False, (34, 1): False, (34, 2): False, (34, 3): False, (34, 4): False, (34, 5): False, (34, 6): False, (34, 7): False, (34, 8): False, (34, 9): False, (34, 10): False, (35, 0): False, (35, 1): False, (35, 2): False, (35, 3): False, (35, 4): False, (35, 5): False, (35, 6): False, (35, 7): False, (35, 8): True, (35, 9): True, (35, 10): False, (36, 0): False, (36, 1): False, (36, 2): False, (36, 3): False, (36, 4): False, (36, 5): False, (36, 6): False, (36, 7): False, (36, 8): True, (36, 9): True, (36, 10): False, (37, 0): False, (37, 1): False, (37, 2): False, (37, 3): False, (37, 4): False, (37, 5): False, (37, 6): False, (37, 7): False, (37, 8): False, (37, 9): False, (37, 10): False, (38, 0): False, (38, 1): False, (38, 2): False, (38, 3): False, (38, 4): False, (38, 5): True, (38, 6): True, (38, 7): True, (38, 8): True, (38, 9): True, (38, 10): False, (39, 0): False, (39, 1): False, (39, 2): False, (39, 3): False, (39, 4): False, (39, 5): True, (39, 6): False, (39, 7): True, (39, 8): False, (39, 9): True, (39, 10): False, (40, 0): False, (40, 1): False, (40, 2): False, (40, 3): False, (40, 4): False, (40, 5): True, (40, 6): False, (40, 7): True, (40, 8): False, (40, 9): True, (40, 10): False, (41, 0): False, (41, 1): False, (41, 2): False, (41, 3): False, (41, 4): False, (41, 5): False, (41, 6): False, (41, 7): False, (41, 8): False, (41, 9): False, (41, 10): False, (42, 0): False, (42, 1): False, (42, 2): False, (42, 3): False, (42, 4): False, (42, 5): False, (42, 6): False, (42, 7): False, (42, 8): True, (42, 9): True, (42, 10): False, (43, 0): False, (43, 1): False, (43, 2): False, (43, 3): False, (43, 4): False, (43, 5): False, (43, 6): False, (43, 7): False, (43, 8): True, (43, 9): True, (43, 10): False, (44, 0): False, (44, 1): False, (44, 2): False, (44, 3): False, (44, 4): False, (44, 5): False, (44, 6): False, (44, 7): False, (44, 8): False, (44, 9): False, (44, 10): False, (45, 0): False, (45, 1): False, (45, 2): False, (45, 3): False, (45, 4): False, (45, 5): True, (45, 6): True, (45, 7): True, (45, 8): True, (45, 9): True, (45, 10): False, (46, 0): False, (46, 1): False, (46, 2): False, (46, 3): False, (46, 4): False, (46, 5): True, (46, 6): False, (46, 7): True, (46, 8): False, (46, 9): True, (46, 10): False, (47, 0): False, (47, 1): False, (47, 2): False, (47, 3): False, (47, 4): False, (47, 5): False, (47, 6): True, (47, 7): False, (47, 8): True, (47, 9): False, (47, 10): False, (48, 0): False, (48, 1): False, (48, 2): False, (48, 3): False, (48, 4): False, (48, 5): False, (48, 6): False, (48, 7): False, (48, 8): False, (48, 9): False, (48, 10): False, (49, 0): False, (49, 1): False, (49, 2): False, (49, 3): False, (49, 4): False, (49, 5): False, (49, 6): False, (49, 7): False, (49, 8): True, (49, 9): True, (49, 10): False, (50, 0): False, (50, 1): False, (50, 2): False, (50, 3): False, (50, 4): False, (50, 5): False, (50, 6): False, (50, 7): False, (50, 8): True, (50, 9): True, (50, 10): False, (51, 0): False, (51, 1): False, (51, 2): False, (51, 3): False, (51, 4): False, (51, 5): False, (51, 6): False, (51, 7): False, (51, 8): False, (51, 9): False, (51, 10): False, (52, 0): False, (52, 1): False, (52, 2): False, (52, 3): False, (52, 4): False, (52, 5): False, (52, 6): False, (52, 7): False, (52, 8): False, (52, 9): False, (52, 10): False, (53, 0): False, (53, 1): False, (53, 2): False, (53, 3): False, (53, 4): False, (53, 5): False, (53, 6): False, (53, 7): False, (53, 8): False, (53, 9): False, (53, 10): False, (54, 0): False, (54, 1): False, (54, 2): False, (54, 3): False, (54, 4): False, (54, 5): False, (54, 6): False, (54, 7): False, (54, 8): False, (54, 9): False, (54, 10): False, (55, 0): False, (55, 1): False, (55, 2): False, (55, 3): False, (55, 4): False, (55, 5): False, (55, 6): False, (55, 7): False, (55, 8): False, (55, 9): False, (55, 10): False, (56, 0): False, (56, 1): False, (56, 2): False, (56, 3): False, (56, 4): False, (56, 5): False, (56, 6): False, (56, 7): False, (56, 8): False, (56, 9): False, (56, 10): False, (57, 0): False, (57, 1): False, (57, 2): False, (57, 3): False, (57, 4): False, (57, 5): False, (57, 6): False, (57, 7): False, (57, 8): False, (57, 9): False, (57, 10): False, (58, 0): False, (58, 1): False, (58, 2): False, (58, 3): False, (58, 4): False, (58, 5): False, (58, 6): False, (58, 7): False, (58, 8): False, (58, 9): False, (58, 10): False, (59, 0): False, (59, 1): False, (59, 2): False, (59, 3): False, (59, 4): False, (59, 5): False, (59, 6): False, (59, 7): False, (59, 8): False, (59, 9): False, (59, 10): False, (60, 0): False, (60, 1): False, (60, 2): False, (60, 3): False, (60, 4): False, (60, 5): False, (60, 6): False, (60, 7): False, (60, 8): False, (60, 9): False, (60, 10): False, (61, 0): False, (61, 1): False, (61, 2): False, (61, 3): False, (61, 4): False, (61, 5): False, (61, 6): False, (61, 7): False, (61, 8): False, (61, 9): False, (61, 10): False, (62, 0): False, (62, 1): False, (62, 2): False, (62, 3): False, (62, 4): False, (62, 5): False, (62, 6): False, (62, 7): False, (62, 8): False, (62, 9): False, (62, 10): False, (63, 0): False, (63, 1): False, (63, 2): False, (63, 3): False, (63, 4): False, (63, 5): False, (63, 6): False, (63, 7): False, (63, 8): False, (63, 9): False, (63, 10): False, (64, 0): False, (64, 1): False, (64, 2): False, (64, 3): False, (64, 4): False, (64, 5): False, (64, 6): False, (64, 7): False, (64, 8): False, (64, 9): False, (64, 10): False, (65, 0): False, (65, 1): False, (65, 2): False, (65, 3): False, (65, 4): False, (65, 5): False, (65, 6): False, (65, 7): False, (65, 8): False, (65, 9): False, (65, 10): False, (66, 0): False, (66, 1): False, (66, 2): False, (66, 3): False, (66, 4): False, (66, 5): False, (66, 6): False, (66, 7): False, (66, 8): False, (66, 9): False, (66, 10): False, (67, 0): False, (67, 1): False, (67, 2): False, (67, 3): False, (67, 4): False, (67, 5): False, (67, 6): False, (67, 7): False, (67, 8): False, (67, 9): False, (67, 10): False, (68, 0): False, (68, 1): False, (68, 2): False, (68, 3): False, (68, 4): False, (68, 5): False, (68, 6): False, (68, 7): False, (68, 8): False, (68, 9): False, (68, 10): False, (69, 0): False, (69, 1): False, (69, 2): False, (69, 3): False, (69, 4): False, (69, 5): False, (69, 6): False, (69, 7): False, (69, 8): False, (69, 9): False, (69, 10): False, (70, 0): False, (70, 1): False, (70, 2): False, (70, 3): False, (70, 4): False, (70, 5): False, (70, 6): False, (70, 7): False, (70, 8): False, (70, 9): False, (70, 10): False, (71, 0): False, (71, 1): False, (71, 2): False, (71, 3): False, (71, 4): False, (71, 5): False, (71, 6): False, (71, 7): False, (71, 8): False, (71, 9): False, (71, 10): False, (72, 0): False, (72, 1): False, (72, 2): False, (72, 3): False, (72, 4): False, (72, 5): False, (72, 6): False, (72, 7): False, (72, 8): False, (72, 9): False, (72, 10): False, (73, 0): False, (73, 1): False, (73, 2): False, (73, 3): False, (73, 4): False, (73, 5): False, (73, 6): False, (73, 7): False, (73, 8): False, (73, 9): False, (73, 10): False, (74, 0): False, (74, 1): False, (74, 2): False, (74, 3): False, (74, 4): False, (74, 5): False, (74, 6): False, (74, 7): False, (74, 8): False, (74, 9): False, (74, 10): False, (75, 0): False, (75, 1): False, (75, 2): False, (75, 3): False, (75, 4): False, (75, 5): False, (75, 6): False, (75, 7): False, (75, 8): False, (75, 9): False, (75, 10): False, (76, 0): False, (76, 1): False, (76, 2): False, (76, 3): False, (76, 4): False, (76, 5): False, (76, 6): False, (76, 7): False, (76, 8): False, (76, 9): False, (76, 10): False, (77, 0): False, (77, 1): False, (77, 2): False, (77, 3): False, (77, 4): False, (77, 5): False, (77, 6): False, (77, 7): False, (77, 8): False, (77, 9): False, (77, 10): False, (78, 0): False, (78, 1): False, (78, 2): False, (78, 3): False, (78, 4): False, (78, 5): False, (78, 6): False, (78, 7): False, (78, 8): False, (78, 9): False, (78, 10): False, (79, 0): False, (79, 1): False, (79, 2): False, (79, 3): False, (79, 4): False, (79, 5): False, (79, 6): False, (79, 7): False, (79, 8): False, (79, 9): False, (79, 10): False, (80, 0): False, (80, 1): False, (80, 2): False, (80, 3): False, (80, 4): False, (80, 5): False, (80, 6): False, (80, 7): False, (80, 8): False, (80, 9): False, (80, 10): False, (81, 0): False, (81, 1): False, (81, 2): False, (81, 3): False, (81, 4): False, (81, 5): False, (81, 6): False, (81, 7): False, (81, 8): False, (81, 9): False, (81, 10): False, (82, 0): False, (82, 1): False, (82, 2): False, (82, 3): False, (82, 4): False, (82, 5): False, (82, 6): False, (82, 7): False, (82, 8): False, (82, 9): False, (82, 10): False, (83, 0): False, (83, 1): False, (83, 2): False, (83, 3): False, (83, 4): False, (83, 5): False, (83, 6): False, (83, 7): False, (83, 8): False, (83, 9): False, (83, 10): False, (84, 0): False, (84, 1): False, (84, 2): False, (84, 3): False, (84, 4): False, (84, 5): False, (84, 6): False, (84, 7): False, (84, 8): False, (84, 9): False, (84, 10): False, (85, 0): False, (85, 1): False, (85, 2): False, (85, 3): False, (85, 4): False, (85, 5): False, (85, 6): False, (85, 7): False, (85, 8): False, (85, 9): False, (85, 10): False, (0, 10): False, (1, 10): False, (2, 10): False, (3, 10): False, (4, 10): False, (5, 10): False, (6, 10): False, (7, 10): False, (8, 10): False, (9, 10): False, (0, 11): False, (1, 11): False, (2, 11): False, (3, 11): False, (4, 11): False, (5, 11): False, (6, 11): True, (7, 11): False, (8, 11): False, (9, 11): True, (10, 11): True, (11, 11): True, (12, 11): False, (13, 11): True, (14, 11): False, (15, 11): True, (16, 11): False, (17, 11): True, (18, 11): True, (19, 11): True, (20, 11): False, (21, 11): False, (22, 11): False, (23, 11): False, (24, 11): False, (25, 11): True, (26, 11): True, (27, 11): True, (28, 11): False, (29, 11): True, (30, 11): False, (31, 11): True, (32, 11): False, (33, 11): False, (34, 11): False, (35, 11): False, (36, 11): False, (37, 11): True, (38, 11): False, (39, 11): True, (40, 11): False, (41, 11): True, (42, 11): True, (43, 11): True, (44, 11): False, (45, 11): True, (46, 11): False, (47, 11): True, (48, 11): False, (49, 11): True, (50, 11): True, (51, 11): True, (52, 11): False, (53, 11): False, (54, 11): False, (55, 11): False, (56, 11): False, (57, 11): True, (58, 11): True, (59, 11): True, (60, 11): False, (61, 11): True, (62, 11): True, (63, 11): True, (64, 11): False, (65, 11): True, (66, 11): False, (67, 11): True, (68, 11): False, (69, 11): True, (70, 11): True, (71, 11): True, (72, 11): False, (73, 11): True, (74, 11): True, (75, 11): True, (76, 11): False, (77, 11): True, (78, 11): True, (79, 11): True, (80, 11): False, (81, 11): False, (82, 11): False, (83, 11): False, (84, 11): False, (85, 11): False, (0, 12): False, (1, 12): False, (2, 12): False, (3, 12): False, (4, 12): False, (5, 12): True, (6, 12): False, (7, 12): False, (8, 12): False, (9, 12): True, (10, 12): False, (11, 12): True, (12, 12): False, (13, 12): True, (14, 12): False, (15, 12): True, (16, 12): False, (17, 12): False, (18, 12): True, (19, 12): False, (20, 12): False, (21, 12): False, (22, 12): False, (23, 12): False, (24, 12): False, (25, 12): True, (26, 12): False, (27, 12): True, (28, 12): False, (29, 12): True, (30, 12): True, (31, 12): True, (32, 12): False, (33, 12): False, (34, 12): False, (35, 12): False, (36, 12): False, (37, 12): True, (38, 12): False, (39, 12): True, (40, 12): False, (41, 12): True, (42, 12): False, (43, 12): True, (44, 12): False, (45, 12): True, (46, 12): False, (47, 12): True, (48, 12): False, (49, 12): True, (50, 12): False, (51, 12): False, (52, 12): False, (53, 12): False, (54, 12): False, (55, 12): False, (56, 12): False, (57, 12): True, (58, 12): False, (59, 12): True, (60, 12): False, (61, 12): True, (62, 12): False, (63, 12): False, (64, 12): False, (65, 12): True, (66, 12): False, (67, 12): True, (68, 12): False, (69, 12): True, (70, 12): False, (71, 12): False, (72, 12): False, (73, 12): False, (74, 12): True, (75, 12): False, (76, 12): False, (77, 12): True, (78, 12): False, (79, 12): False, (80, 12): False, (81, 12): False, (82, 12): False, (83, 12): False, (84, 12): False, (85, 12): False, (0, 13): False, (1, 13): False, (2, 13): False, (3, 13): False, (4, 13): False, (5, 13): True, (6, 13): False, (7, 13): False, (8, 13): False, (9, 13): True, (10, 13): False, (11, 13): True, (12, 13): False, (13, 13): True, (14, 13): False, (15, 13): True, (16, 13): False, (17, 13): False, (18, 13): True, (19, 13): False, (20, 13): False, (21, 13): False, (22, 13): False, (23, 13): False, (24, 13): False, (25, 13): True, (26, 13): False, (27, 13): True, (28, 13): False, (29, 13): True, (30, 13): True, (31, 13): True, (32, 13): False, (33, 13): False, (34, 13): False, (35, 13): False, (36, 13): False, (37, 13): True, (38, 13): False, (39, 13): True, (40, 13): False, (41, 13): True, (42, 13): False, (43, 13): True, (44, 13): False, (45, 13): True, (46, 13): False, (47, 13): True, (48, 13): False, (49, 13): True, (50, 13): True, (51, 13): True, (52, 13): False, (53, 13): False, (54, 13): False, (55, 13): False, (56, 13): False, (57, 13): True, (58, 13): True, (59, 13): True, (60, 13): False, (61, 13): True, (62, 13): False, (63, 13): False, (64, 13): False, (65, 13): True, (66, 13): True, (67, 13): True, (68, 13): False, (69, 13): True, (70, 13): True, (71, 13): True, (72, 13): False, (73, 13): False, (74, 13): True, (75, 13): False, (76, 13): False, (77, 13): True, (78, 13): True, (79, 13): True, (80, 13): False, (81, 13): False, (82, 13): False, (83, 13): False, (84, 13): False, (85, 13): False, (0, 14): False, (1, 14): False, (2, 14): False, (3, 14): False, (4, 14): False, (5, 14): True, (6, 14): False, (7, 14): False, (8, 14): False, (9, 14): True, (10, 14): False, (11, 14): True, (12, 14): False, (13, 14): True, (14, 14): False, (15, 14): True, (16, 14): False, (17, 14): False, (18, 14): True, (19, 14): False, (20, 14): False, (21, 14): False, (22, 14): False, (23, 14): False, (24, 14): False, (25, 14): True, (26, 14): False, (27, 14): True, (28, 14): False, (29, 14): True, (30, 14): True, (31, 14): True, (32, 14): False, (33, 14): False, (34, 14): False, (35, 14): False, (36, 14): False, (37, 14): True, (38, 14): False, (39, 14): True, (40, 14): False, (41, 14): True, (42, 14): False, (43, 14): True, (44, 14): False, (45, 14): True, (46, 14): False, (47, 14): True, (48, 14): False, (49, 14): False, (50, 14): False, (51, 14): True, (52, 14): False, (53, 14): False, (54, 14): False, (55, 14): False, (56, 14): False, (57, 14): True, (58, 14): False, (59, 14): True, (60, 14): False, (61, 14): True, (62, 14): False, (63, 14): False, (64, 14): False, (65, 14): True, (66, 14): False, (67, 14): True, (68, 14): False, (69, 14): True, (70, 14): False, (71, 14): False, (72, 14): False, (73, 14): False, (74, 14): True, (75, 14): False, (76, 14): False, (77, 14): True, (78, 14): False, (79, 14): False, (80, 14): False, (81, 14): False, (82, 14): False, (83, 14): False, (84, 14): False, (85, 14): False, (0, 15): False, (1, 15): False, (2, 15): False, (3, 15): False, (4, 15): False, (5, 15): False, (6, 15): True, (7, 15): False, (8, 15): False, (9, 15): True, (10, 15): True, (11, 15): True, (12, 15): False, (13, 15): True, (14, 15): True, (15, 15): True, (16, 15): False, (17, 15): True, (18, 15): True, (19, 15): True, (20, 15): False, (21, 15): False, (22, 15): False, (23, 15): False, (24, 15): False, (25, 15): True, (26, 15): True, (27, 15): True, (28, 15): False, (29, 15): True, (30, 15): False, (31, 15): True, (32, 15): False, (33, 15): False, (34, 15): False, (35, 15): False, (36, 15): False, (37, 15): False, (38, 15): True, (39, 15): False, (40, 15): False, (41, 15): True, (42, 15): True, (43, 15): True, (44, 15): False, (45, 15): True, (46, 15): True, (47, 15): True, (48, 15): False, (49, 15): True, (50, 15): True, (51, 15): True, (52, 15): False, (53, 15): False, (54, 15): False, (55, 15): False, (56, 15): False, (57, 15): True, (58, 15): False, (59, 15): True, (60, 15): False, (61, 15): True, (62, 15): True, (63, 15): True, (64, 15): False, (65, 15): True, (66, 15): False, (67, 15): True, (68, 15): False, (69, 15): True, (70, 15): True, (71, 15): True, (72, 15): False, (73, 15): False, (74, 15): True, (75, 15): False, (76, 15): False, (77, 15): True, (78, 15): True, (79, 15): True, (80, 15): False, (81, 15): False, (82, 15): False, (83, 15): False, (84, 15): False, (85, 15): False, (0, 16): False, (1, 16): False, (2, 16): False, (3, 16): False, (4, 16): False, (5, 16): False, (6, 16): False, (7, 16): False, (8, 16): False, (9, 16): False, (10, 16): False, (11, 16): False, (12, 16): False, (13, 16): False, (14, 16): False, (15, 16): False, (16, 16): False, (17, 16): False, (18, 16): False, (19, 16): False, (20, 16): False, (21, 16): False, (22, 16): False, (23, 16): False, (24, 16): False, (25, 16): False, (26, 16): False, (27, 16): False, (28, 16): False, (29, 16): False, (30, 16): False, (31, 16): False, (32, 16): False, (33, 16): False, (34, 16): False, (35, 16): False, (36, 16): False, (37, 16): False, (38, 16): False, (39, 16): False, (40, 16): False, (41, 16): False, (42, 16): False, (43, 16): False, (44, 16): False, (45, 16): False, (46, 16): False, (47, 16): False, (48, 16): False, (49, 16): False, (50, 16): False, (51, 16): False, (52, 16): False, (53, 16): False, (54, 16): False, (55, 16): False, (56, 16): False, (57, 16): False, (58, 16): False, (59, 16): False, (60, 16): False, (61, 16): False, (62, 16): False, (63, 16): False, (64, 16): False, (65, 16): False, (66, 16): False, (67, 16): False, (68, 16): False, (69, 16): False, (70, 16): False, (71, 16): False, (72, 16): False, (73, 16): False, (74, 16): False, (75, 16): False, (76, 16): False, (77, 16): False, (78, 16): False, (79, 16): False, (80, 16): False, (81, 16): False, (82, 16): False, (83, 16): False, (84, 16): False, (85, 16): False, (0, 17): False, (1, 17): False, (2, 17): False, (3, 17): False, (4, 17): False, (5, 17): False, (6, 17): False, (7, 17): False, (8, 17): False, (9, 17): False, (10, 17): False, (11, 17): False, (12, 17): False, (13, 17): False, (14, 17): False, (15, 17): True, (16, 17): True, (17, 17): True, (18, 17): False, (19, 17): True, (20, 17): False, (21, 17): True, (22, 17): False, (23, 17): True, (24, 17): True, (25, 17): True, (26, 17): False, (27, 17): True, (28, 17): True, (29, 17): True, (30, 17): False, (31, 17): False, (32, 17): False, (33, 17): False, (34, 17): False, (35, 17): True, (36, 17): False, (37, 17): True, (38, 17): False, (39, 17): True, (40, 17): False, (41, 17): True, (42, 17): False, (43, 17): True, (44, 17): True, (45, 17): True, (46, 17): False, (47, 17): False, (48, 17): False, (49, 17): False, (50, 17): False, (51, 17): True, (52, 17): True, (53, 17): True, (54, 17): False, (55, 17): True, (56, 17): True, (57, 17): True, (58, 17): False, (59, 17): True, (60, 17): True, (61, 17): False, (62, 17): False, (63, 17): True, (64, 17): True, (65, 17): True, (66, 17): False, (67, 17): True, (68, 17): True, (69, 17): True, (70, 17): False, (71, 17): False, (72, 17): False, (73, 17): False, (74, 17): False, (75, 17): False, (76, 17): False, (77, 17): False, (78, 17): False, (79, 17): False, (80, 17): False, (81, 17): False, (82, 17): False, (83, 17): False, (84, 17): False, (85, 17): False, (0, 18): False, (1, 18): False, (2, 18): False, (3, 18): False, (4, 18): False, (5, 18): False, (6, 18): False, (7, 18): False, (8, 18): False, (9, 18): False, (10, 18): False, (11, 18): False, (12, 18): False, (13, 18): False, (14, 18): False, (15, 18): True, (16, 18): False, (17, 18): True, (18, 18): False, (19, 18): True, (20, 18): False, (21, 18): True, (22, 18): False, (23, 18): True, (24, 18): False, (25, 18): False, (26, 18): False, (27, 18): True, (28, 18): False, (29, 18): False, (30, 18): False, (31, 18): False, (32, 18): False, (33, 18): False, (34, 18): False, (35, 18): True, (36, 18): False, (37, 18): True, (38, 18): False, (39, 18): True, (40, 18): True, (41, 18): True, (42, 18): False, (43, 18): True, (44, 18): False, (45, 18): False, (46, 18): False, (47, 18): False, (48, 18): False, (49, 18): False, (50, 18): False, (51, 18): True, (52, 18): False, (53, 18): False, (54, 18): False, (55, 18): True, (56, 18): False, (57, 18): True, (58, 18): False, (59, 18): True, (60, 18): False, (61, 18): True, (62, 18): False, (63, 18): False, (64, 18): True, (65, 18): False, (66, 18): False, (67, 18): True, (68, 18): False, (69, 18): False, (70, 18): False, (71, 18): False, (72, 18): False, (73, 18): False, (74, 18): False, (75, 18): False, (76, 18): False, (77, 18): False, (78, 18): False, (79, 18): False, (80, 18): False, (81, 18): False, (82, 18): False, (83, 18): False, (84, 18): False, (85, 18): False, (0, 19): False, (1, 19): False, (2, 19): False, (3, 19): False, (4, 19): False, (5, 19): False, (6, 19): False, (7, 19): False, (8, 19): False, (9, 19): False, (10, 19): False, (11, 19): False, (12, 19): False, (13, 19): False, (14, 19): False, (15, 19): True, (16, 19): True, (17, 19): True, (18, 19): False, (19, 19): True, (20, 19): False, (21, 19): True, (22, 19): False, (23, 19): True, (24, 19): True, (25, 19): True, (26, 19): False, (27, 19): True, (28, 19): False, (29, 19): False, (30, 19): False, (31, 19): False, (32, 19): False, (33, 19): False, (34, 19): False, (35, 19): True, (36, 19): False, (37, 19): True, (38, 19): False, (39, 19): True, (40, 19): True, (41, 19): True, (42, 19): False, (43, 19): True, (44, 19): True, (45, 19): True, (46, 19): False, (47, 19): False, (48, 19): False, (49, 19): False, (50, 19): False, (51, 19): True, (52, 19): False, (53, 19): False, (54, 19): False, (55, 19): True, (56, 19): True, (57, 19): True, (58, 19): False, (59, 19): True, (60, 19): True, (61, 19): False, (62, 19): False, (63, 19): False, (64, 19): True, (65, 19): False, (66, 19): False, (67, 19): True, (68, 19): True, (69, 19): True, (70, 19): False, (71, 19): False, (72, 19): False, (73, 19): False, (74, 19): False, (75, 19): False, (76, 19): False, (77, 19): False, (78, 19): False, (79, 19): False, (80, 19): False, (81, 19): False, (82, 19): False, (83, 19): False, (84, 19): False, (85, 19): False, (0, 20): False, (1, 20): False, (2, 20): False, (3, 20): False, (4, 20): False, (5, 20): False, (6, 20): False, (7, 20): False, (8, 20): False, (9, 20): False, (10, 20): False, (11, 20): False, (12, 20): False, (13, 20): False, (14, 20): False, (15, 20): True, (16, 20): False, (17, 20): True, (18, 20): False, (19, 20): True, (20, 20): False, (21, 20): True, (22, 20): False, (23, 20): True, (24, 20): False, (25, 20): False, (26, 20): False, (27, 20): True, (28, 20): False, (29, 20): False, (30, 20): False, (31, 20): False, (32, 20): False, (33, 20): False, (34, 20): False, (35, 20): True, (36, 20): False, (37, 20): True, (38, 20): False, (39, 20): True, (40, 20): True, (41, 20): True, (42, 20): False, (43, 20): True, (44, 20): False, (45, 20): False, (46, 20): False, (47, 20): False, (48, 20): False, (49, 20): False, (50, 20): False, (51, 20): True, (52, 20): False, (53, 20): False, (54, 20): False, (55, 20): True, (56, 20): False, (57, 20): True, (58, 20): False, (59, 20): True, (60, 20): False, (61, 20): True, (62, 20): False, (63, 20): False, (64, 20): True, (65, 20): False, (66, 20): False, (67, 20): True, (68, 20): False, (69, 20): False, (70, 20): False, (71, 20): False, (72, 20): False, (73, 20): False, (74, 20): False, (75, 20): False, (76, 20): False, (77, 20): False, (78, 20): False, (79, 20): False, (80, 20): False, (81, 20): False, (82, 20): False, (83, 20): False, (84, 20): False, (85, 20): False, (0, 21): False, (1, 21): False, (2, 21): False, (3, 21): False, (4, 21): False, (5, 21): False, (6, 21): False, (7, 21): False, (8, 21): False, (9, 21): False, (10, 21): False, (11, 21): False, (12, 21): False, (13, 21): False, (14, 21): False, (15, 21): True, (16, 21): False, (17, 21): True, (18, 21): False, (19, 21): False, (20, 21): True, (21, 21): False, (22, 21): False, (23, 21): True, (24, 21): True, (25, 21): True, (26, 21): False, (27, 21): True, (28, 21): True, (29, 21): True, (30, 21): False, (31, 21): False, (32, 21): False, (33, 21): False, (34, 21): False, (35, 21): True, (36, 21): True, (37, 21): True, (38, 21): False, (39, 21): True, (40, 21): False, (41, 21): True, (42, 21): False, (43, 21): True, (44, 21): True, (45, 21): True, (46, 21): False, (47, 21): False, (48, 21): False, (49, 21): False, (50, 21): False, (51, 21): True, (52, 21): True, (53, 21): True, (54, 21): False, (55, 21): True, (56, 21): False, (57, 21): True, (58, 21): False, (59, 21): True, (60, 21): False, (61, 21): True, (62, 21): False, (63, 21): False, (64, 21): True, (65, 21): False, (66, 21): False, (67, 21): True, (68, 21): True, (69, 21): True, (70, 21): False, (71, 21): False, (72, 21): False, (73, 21): False, (74, 21): False, (75, 21): False, (76, 21): False, (77, 21): False, (78, 21): False, (79, 21): False, (80, 21): False, (81, 21): False, (82, 21): False, (83, 21): False, (84, 21): False, (85, 21): False, (0, 22): False, (1, 22): False, (2, 22): False, (3, 22): False, (4, 22): False, (5, 22): False, (6, 22): False, (7, 22): False, (8, 22): False, (9, 22): False, (10, 22): False, (11, 22): False, (12, 22): False, (13, 22): False, (14, 22): False, (15, 22): False, (16, 22): False, (17, 22): False, (18, 22): False, (19, 22): False, (20, 22): False, (21, 22): False, (22, 22): False, (23, 22): False, (24, 22): False, (25, 22): False, (26, 22): False, (27, 22): False, (28, 22): False, (29, 22): False, (30, 22): False, (31, 22): False, (32, 22): False, (33, 22): False, (34, 22): False, (35, 22): False, (36, 22): False, (37, 22): False, (38, 22): False, (39, 22): False, (40, 22): False, (41, 22): False, (42, 22): False, (43, 22): False, (44, 22): False, (45, 22): False, (46, 22): False, (47, 22): False, (48, 22): False, (49, 22): False, (50, 22): False, (51, 22): False, (52, 22): False, (53, 22): False, (54, 22): False, (55, 22): False, (56, 22): False, (57, 22): False, (58, 22): False, (59, 22): False, (60, 22): False, (61, 22): False, (62, 22): False, (63, 22): False, (64, 22): False, (65, 22): False, (66, 22): False, (67, 22): False, (68, 22): False, (69, 22): False, (70, 22): False, (71, 22): False, (72, 22): False, (73, 22): False, (74, 22): False, (75, 22): False, (76, 22): False, (77, 22): False, (78, 22): False, (79, 22): False, (80, 22): False, (81, 22): False, (82, 22): False, (83, 22): False, (84, 22): False, (85, 22): False, (0, 23): False, (1, 23): False, (2, 23): False, (3, 23): False, (4, 23): False, (5, 23): False, (6, 23): False, (7, 23): False, (8, 23): False, (9, 23): False, (10, 23): False, (11, 23): False, (12, 23): False, (13, 23): False, (14, 23): False, (15, 23): False, (16, 23): False, (17, 23): False, (18, 23): True, (19, 23): True, (20, 23): True, (21, 23): False, (22, 23): False, (23, 23): False, (24, 23): False, (25, 23): False, (26, 23): True, (27, 23): False, (28, 23): True, (29, 23): False, (30, 23): True, (31, 23): True, (32, 23): True, (33, 23): False, (34, 23): True, (35, 23): True, (36, 23): True, (37, 23): False, (38, 23): True, (39, 23): True, (40, 23): False, (41, 23): False, (42, 23): True, (43, 23): True, (44, 23): True, (45, 23): False, (46, 23): False, (47, 23): False, (48, 23): False, (49, 23): False, (50, 23): True, (51, 23): False, (52, 23): True, (53, 23): False, (54, 23): True, (55, 23): True, (56, 23): True, (57, 23): False, (58, 23): True, (59, 23): False, (60, 23): True, (61, 23): False, (62, 23): False, (63, 23): True, (64, 23): False, (65, 23): False, (66, 23): False, (67, 23): False, (68, 23): False, (69, 23): False, (70, 23): False, (71, 23): False, (72, 23): False, (73, 23): False, (74, 23): False, (75, 23): False, (76, 23): False, (77, 23): False, (78, 23): False, (79, 23): False, (80, 23): False, (81, 23): False, (82, 23): False, (83, 23): False, (84, 23): False, (85, 23): False, (0, 24): False, (1, 24): False, (2, 24): False, (3, 24): False, (4, 24): False, (5, 24): False, (6, 24): False, (7, 24): False, (8, 24): False, (9, 24): False, (10, 24): False, (11, 24): False, (12, 24): False, (13, 24): False, (14, 24): False, (15, 24): False, (16, 24): False, (17, 24): False, (18, 24): True, (19, 24): False, (20, 24): True, (21, 24): False, (22, 24): False, (23, 24): False, (24, 24): False, (25, 24): False, (26, 24): True, (27, 24): False, (28, 24): True, (29, 24): False, (30, 24): True, (31, 24): False, (32, 24): True, (33, 24): False, (34, 24): False, (35, 24): True, (36, 24): False, (37, 24): False, (38, 24): True, (39, 24): False, (40, 24): True, (41, 24): False, (42, 24): True, (43, 24): False, (44, 24): False, (45, 24): False, (46, 24): False, (47, 24): False, (48, 24): False, (49, 24): False, (50, 24): True, (51, 24): True, (52, 24): True, (53, 24): False, (54, 24): True, (55, 24): False, (56, 24): True, (57, 24): False, (58, 24): True, (59, 24): True, (60, 24): True, (61, 24): False, (62, 24): False, (63, 24): False, (64, 24): True, (65, 24): False, (66, 24): False, (67, 24): False, (68, 24): False, (69, 24): False, (70, 24): False, (71, 24): False, (72, 24): False, (73, 24): False, (74, 24): False, (75, 24): False, (76, 24): False, (77, 24): False, (78, 24): False, (79, 24): False, (80, 24): False, (81, 24): False, (82, 24): False, (83, 24): False, (84, 24): False, (85, 24): False, (0, 25): False, (1, 25): False, (2, 25): False, (3, 25): False, (4, 25): False, (5, 25): False, (6, 25): False, (7, 25): False, (8, 25): False, (9, 25): False, (10, 25): False, (11, 25): False, (12, 25): False, (13, 25): False, (14, 25): False, (15, 25): False, (16, 25): False, (17, 25): False, (18, 25): True, (19, 25): True, (20, 25): True, (21, 25): False, (22, 25): False, (23, 25): False, (24, 25): False, (25, 25): False, (26, 25): True, (27, 25): False, (28, 25): True, (29, 25): False, (30, 25): True, (31, 25): False, (32, 25): True, (33, 25): False, (34, 25): False, (35, 25): True, (36, 25): False, (37, 25): False, (38, 25): True, (39, 25): True, (40, 25): False, (41, 25): False, (42, 25): True, (43, 25): True, (44, 25): True, (45, 25): False, (46, 25): False, (47, 25): False, (48, 25): False, (49, 25): False, (50, 25): True, (51, 25): True, (52, 25): True, (53, 25): False, (54, 25): True, (55, 25): False, (56, 25): True, (57, 25): False, (58, 25): True, (59, 25): False, (60, 25): True, (61, 25): False, (62, 25): False, (63, 25): False, (64, 25): True, (65, 25): False, (66, 25): False, (67, 25): False, (68, 25): False, (69, 25): False, (70, 25): False, (71, 25): False, (72, 25): False, (73, 25): False, (74, 25): False, (75, 25): False, (76, 25): False, (77, 25): False, (78, 25): False, (79, 25): False, (80, 25): False, (81, 25): False, (82, 25): False, (83, 25): False, (84, 25): False, (85, 25): False, (0, 26): False, (1, 26): False, (2, 26): False, (3, 26): False, (4, 26): False, (5, 26): False, (6, 26): False, (7, 26): False, (8, 26): False, (9, 26): False, (10, 26): False, (11, 26): False, (12, 26): False, (13, 26): False, (14, 26): False, (15, 26): False, (16, 26): False, (17, 26): False, (18, 26): True, (19, 26): False, (20, 26): True, (21, 26): False, (22, 26): False, (23, 26): False, (24, 26): False, (25, 26): False, (26, 26): True, (27, 26): False, (28, 26): True, (29, 26): False, (30, 26): True, (31, 26): False, (32, 26): True, (33, 26): False, (34, 26): False, (35, 26): True, (36, 26): False, (37, 26): False, (38, 26): True, (39, 26): False, (40, 26): True, (41, 26): False, (42, 26): True, (43, 26): False, (44, 26): False, (45, 26): False, (46, 26): False, (47, 26): False, (48, 26): False, (49, 26): False, (50, 26): True, (51, 26): True, (52, 26): True, (53, 26): False, (54, 26): True, (55, 26): False, (56, 26): True, (57, 26): False, (58, 26): True, (59, 26): False, (60, 26): True, (61, 26): False, (62, 26): False, (63, 26): False, (64, 26): True, (65, 26): False, (66, 26): False, (67, 26): False, (68, 26): False, (69, 26): False, (70, 26): False, (71, 26): False, (72, 26): False, (73, 26): False, (74, 26): False, (75, 26): False, (76, 26): False, (77, 26): False, (78, 26): False, (79, 26): False, (80, 26): False, (81, 26): False, (82, 26): False, (83, 26): False, (84, 26): False, (85, 26): False, (0, 27): False, (1, 27): False, (2, 27): False, (3, 27): False, (4, 27): False, (5, 27): False, (6, 27): False, (7, 27): False, (8, 27): False, (9, 27): False, (10, 27): False, (11, 27): False, (12, 27): False, (13, 27): False, (14, 27): False, (15, 27): False, (16, 27): False, (17, 27): False, (18, 27): True, (19, 27): False, (20, 27): True, (21, 27): False, (22, 27): False, (23, 27): False, (24, 27): False, (25, 27): False, (26, 27): False, (27, 27): True, (28, 27): False, (29, 27): False, (30, 27): True, (31, 27): True, (32, 27): True, (33, 27): False, (34, 27): False, (35, 27): True, (36, 27): False, (37, 27): False, (38, 27): True, (39, 27): False, (40, 27): True, (41, 27): False, (42, 27): True, (43, 27): True, (44, 27): True, (45, 27): False, (46, 27): False, (47, 27): False, (48, 27): False, (49, 27): False, (50, 27): True, (51, 27): False, (52, 27): True, (53, 27): False, (54, 27): True, (55, 27): True, (56, 27): True, (57, 27): False, (58, 27): True, (59, 27): False, (60, 27): True, (61, 27): False, (62, 27): False, (63, 27): True, (64, 27): False, (65, 27): False, (66, 27): False, (67, 27): False, (68, 27): False, (69, 27): False, (70, 27): False, (71, 27): False, (72, 27): False, (73, 27): False, (74, 27): False, (75, 27): False, (76, 27): False, (77, 27): False, (78, 27): False, (79, 27): False, (80, 27): False, (81, 27): False, (82, 27): False, (83, 27): False, (84, 27): False, (85, 27): False, (0, 28): False, (1, 28): False, (2, 28): False, (3, 28): False, (4, 28): False, (5, 28): False, (6, 28): False, (7, 28): False, (8, 28): False, (9, 28): False, (10, 28): False, (11, 28): False, (12, 28): False, (13, 28): False, (14, 28): False, (15, 28): False, (16, 28): False, (17, 28): False, (18, 28): False, (19, 28): False, (20, 28): False, (21, 28): False, (22, 28): False, (23, 28): False, (24, 28): False, (25, 28): False, (26, 28): False, (27, 28): False, (28, 28): False, (29, 28): False, (30, 28): False, (31, 28): False, (32, 28): False, (33, 28): False, (34, 28): False, (35, 28): False, (36, 28): False, (37, 28): False, (38, 28): False, (39, 28): False, (40, 28): False, (41, 28): False, (42, 28): False, (43, 28): False, (44, 28): False, (45, 28): False, (46, 28): False, (47, 28): False, (48, 28): False, (49, 28): False, (50, 28): False, (51, 28): False, (52, 28): False, (53, 28): False, (54, 28): False, (55, 28): False, (56, 28): False, (57, 28): False, (58, 28): False, (59, 28): False, (60, 28): False, (61, 28): False, (62, 28): False, (63, 28): False, (64, 28): False, (65, 28): False, (66, 28): False, (67, 28): False, (68, 28): False, (69, 28): False, (70, 28): False, (71, 28): False, (72, 28): False, (73, 28): False, (74, 28): False, (75, 28): False, (76, 28): False, (77, 28): False, (78, 28): False, (79, 28): False, (80, 28): False, (81, 28): False, (82, 28): False, (83, 28): False, (84, 28): False, (85, 28): False, (0, 29): False, (1, 29): False, (2, 29): False, (3, 29): False, (4, 29): False, (5, 29): False, (6, 29): False, (7, 29): False, (8, 29): False, (9, 29): False, (10, 29): False, (11, 29): False, (12, 29): False, (13, 29): False, (14, 29): False, (15, 29): False, (16, 29): False, (17, 29): False, (18, 29): False, (19, 29): False, (20, 29): False, (21, 29): False, (22, 29): False, (23, 29): False, (24, 29): False, (25, 29): False, (26, 29): False, (27, 29): False, (28, 29): False, (29, 29): False, (30, 29): False, (31, 29): False, (32, 29): False, (33, 29): False, (34, 29): False, (35, 29): False, (36, 29): False, (37, 29): False, (38, 29): False, (39, 29): False, (40, 29): False, (41, 29): False, (42, 29): False, (43, 29): False, (44, 29): False, (45, 29): False, (46, 29): False, (47, 29): False, (48, 29): False, (49, 29): False, (50, 29): False, (51, 29): False, (52, 29): False, (53, 29): False, (54, 29): False, (55, 29): False, (56, 29): False, (57, 29): False, (58, 29): False, (59, 29): False, (60, 29): False, (61, 29): False, (62, 29): False, (63, 29): False, (64, 29): False, (65, 29): False, (66, 29): False, (67, 29): False, (68, 29): False, (69, 29): False, (70, 29): False, (71, 29): False, (72, 29): False, (73, 29): False, (74, 29): False, (75, 29): False, (76, 29): False, (77, 29): False, (78, 29): False, (79, 29): False, (80, 29): False, (81, 29): False, (82, 29): False, (83, 29): False, (84, 29): False, (85, 29): False, (0, 30): False, (1, 30): False, (2, 30): False, (3, 30): False, (4, 30): False, (5, 30): False, (6, 30): False, (7, 30): False, (8, 30): False, (9, 30): False, (10, 30): False, (11, 30): False, (12, 30): False, (13, 30): False, (14, 30): False, (15, 30): False, (16, 30): False, (17, 30): False, (18, 30): False, (19, 30): False, (20, 30): False, (21, 30): False, (22, 30): False, (23, 30): False, (24, 30): False, (25, 30): False, (26, 30): False, (27, 30): False, (28, 30): False, (29, 30): False, (30, 30): False, (31, 30): False, (32, 30): False, (33, 30): False, (34, 30): False, (35, 30): False, (36, 30): False, (37, 30): False, (38, 30): False, (39, 30): False, (40, 30): False, (41, 30): False, (42, 30): False, (43, 30): False, (44, 30): False, (45, 30): False, (46, 30): False, (47, 30): False, (48, 30): False, (49, 30): False, (50, 30): False, (51, 30): False, (52, 30): False, (53, 30): False, (54, 30): False, (55, 30): False, (56, 30): False, (57, 30): False, (58, 30): False, (59, 30): False, (60, 30): False, (61, 30): False, (62, 30): False, (63, 30): False, (64, 30): False, (65, 30): False, (66, 30): False, (67, 30): False, (68, 30): False, (69, 30): False, (70, 30): False, (71, 30): False, (72, 30): False, (73, 30): False, (74, 30): False, (75, 30): False, (76, 30): False, (77, 30): False, (78, 30): False, (79, 30): False, (80, 30): False, (81, 30): False, (82, 30): False, (83, 30): False, (84, 30): False, (85, 30): False, (0, 31): False, (1, 31): False, (2, 31): False, (3, 31): False, (4, 31): False, (5, 31): False, (6, 31): False, (7, 31): False, (8, 31): False, (9, 31): False, (10, 31): False, (11, 31): False, (12, 31): False, (13, 31): False, (14, 31): False, (15, 31): False, (16, 31): False, (17, 31): False, (18, 31): False, (19, 31): False, (20, 31): False, (21, 31): False, (22, 31): False, (23, 31): False, (24, 31): False, (25, 31): False, (26, 31): False, (27, 31): False, (28, 31): False, (29, 31): False, (30, 31): False, (31, 31): False, (32, 31): False, (33, 31): False, (34, 31): False, (35, 31): False, (36, 31): False, (37, 31): False, (38, 31): False, (39, 31): False, (40, 31): False, (41, 31): False, (42, 31): False, (43, 31): False, (44, 31): False, (45, 31): False, (46, 31): False, (47, 31): False, (48, 31): False, (49, 31): False, (50, 31): False, (51, 31): False, (52, 31): False, (53, 31): False, (54, 31): False, (55, 31): False, (56, 31): False, (57, 31): False, (58, 31): False, (59, 31): False, (60, 31): False, (61, 31): False, (62, 31): False, (63, 31): False, (64, 31): False, (65, 31): False, (66, 31): False, (67, 31): False, (68, 31): False, (69, 31): False, (70, 31): False, (71, 31): False, (72, 31): False, (73, 31): False, (74, 31): False, (75, 31): False, (76, 31): False, (77, 31): False, (78, 31): False, (79, 31): False, (80, 31): False, (81, 31): False, (82, 31): False, (83, 31): False, (84, 31): False, (85, 31): False, (0, 32): False, (1, 32): False, (2, 32): False, (3, 32): False, (4, 32): False, (5, 32): False, (6, 32): False, (7, 32): False, (8, 32): False, (9, 32): False, (10, 32): False, (11, 32): False, (12, 32): False, (13, 32): False, (14, 32): False, (15, 32): False, (16, 32): False, (17, 32): False, (18, 32): False, (19, 32): False, (20, 32): False, (21, 32): False, (22, 32): False, (23, 32): False, (24, 32): False, (25, 32): False, (26, 32): False, (27, 32): False, (28, 32): False, (29, 32): False, (30, 32): False, (31, 32): False, (32, 32): False, (33, 32): False, (34, 32): False, (35, 32): False, (36, 32): False, (37, 32): False, (38, 32): False, (39, 32): False, (40, 32): False, (41, 32): False, (42, 32): False, (43, 32): False, (44, 32): False, (45, 32): False, (46, 32): False, (47, 32): False, (48, 32): False, (49, 32): False, (50, 32): False, (51, 32): False, (52, 32): False, (53, 32): False, (54, 32): False, (55, 32): False, (56, 32): False, (57, 32): False, (58, 32): False, (59, 32): False, (60, 32): False, (61, 32): False, (62, 32): False, (63, 32): False, (64, 32): False, (65, 32): False, (66, 32): False, (67, 32): False, (68, 32): False, (69, 32): False, (70, 32): False, (71, 32): False, (72, 32): False, (73, 32): False, (74, 32): False, (75, 32): False, (76, 32): False, (77, 32): False, (78, 32): False, (79, 32): False, (80, 32): False, (81, 32): False, (82, 32): False, (83, 32): False, (84, 32): False, (85, 32): False, (0, 33): False, (1, 33): False, (2, 33): False, (3, 33): False, (4, 33): False, (5, 33): False, (6, 33): False, (7, 33): False, (8, 33): False, (9, 33): False, (10, 33): False, (11, 33): False, (12, 33): False, (13, 33): False, (14, 33): False, (15, 33): False, (16, 33): False, (17, 33): False, (18, 33): False, (19, 33): False, (20, 33): False, (21, 33): False, (22, 33): False, (23, 33): False, (24, 33): False, (25, 33): False, (26, 33): False, (27, 33): False, (28, 33): False, (29, 33): False, (30, 33): False, (31, 33): False, (32, 33): False, (33, 33): False, (34, 33): False, (35, 33): False, (36, 33): False, (37, 33): False, (38, 33): False, (39, 33): False, (40, 33): False, (41, 33): False, (42, 33): False, (43, 33): False, (44, 33): False, (45, 33): False, (46, 33): False, (47, 33): False, (48, 33): False, (49, 33): False, (50, 33): False, (51, 33): False, (52, 33): False, (53, 33): False, (54, 33): False, (55, 33): False, (56, 33): False, (57, 33): False, (58, 33): False, (59, 33): False, (60, 33): False, (61, 33): False, (62, 33): False, (63, 33): False, (64, 33): False, (65, 33): False, (66, 33): False, (67, 33): False, (68, 33): False, (69, 33): False, (70, 33): False, (71, 33): False, (72, 33): False, (73, 33): False, (74, 33): False, (75, 33): False, (76, 33): False, (77, 33): False, (78, 33): False, (79, 33): False, (80, 33): False, (81, 33): False, (82, 33): False, (83, 33): False, (84, 33): False, (85, 33): False}
ΔStars = {(0, 0): 0, (0, 1): 0, (0, 2): 0, (0, 3): 0, (0, 4): 0, (0, 5): 0, (0, 6): 0, (0, 7): 0, (0, 8): 0, (0, 9): 0, (1, 0): 0, (1, 1): 0, (1, 2): 0, (1, 3): 0, (1, 4): 0, (1, 5): 0, (1, 6): 0, (1, 7): 0, (1, 8): 0, (1, 9): 0, (2, 0): 0, (2, 1): 0, (2, 2): 0, (2, 3): 0, (2, 4): 0, (2, 5): 0, (2, 6): 0, (2, 7): 0, (2, 8): 0, (2, 9): 0, (3, 0): 0, (3, 1): 0, (3, 2): 0, (3, 3): 1, (3, 4): 0, (3, 5): 0, (3, 6): 0, (3, 7): 1, (3, 8): 0, (3, 9): 0, (4, 0): 0, (4, 1): 0, (4, 2): 0, (4, 3): 2, (4, 4): 0, (4, 5): 0, (4, 6): 0, (4, 7): 1, (4, 8): 0, (4, 9): 0, (5, 0): 0, (5, 1): 0, (5, 2): 0, (5, 3): 1, (5, 4): 2, (5, 5): 2, (5, 6): 0, (5, 7): 1, (5, 8): 0, (5, 9): 0, (6, 0): 0, (6, 1): 0, (6, 2): 0, (6, 3): 2, (6, 4): 0, (6, 5): 0, (6, 6): 0, (6, 7): 1, (6, 8): 0, (6, 9): 0, (7, 0): 0, (7, 1): 0, (7, 2): 0, (7, 3): 1, (7, 4): 0, (7, 5): 2, (7, 6): 2, (7, 7): 1, (7, 8): 1, (7, 9): 1, (8, 0): 0, (8, 1): 0, (8, 2): 0, (8, 3): 3, (8, 4): 0, (8, 5): 0, (8, 6): 0, (8, 7): 0, (8, 8): 0, (8, 9): 2, (9, 0): 0, (9, 1): 0, (9, 2): 0, (9, 3): 1, (9, 4): 2, (9, 5): 2, (9, 6): 0, (9, 7): 2, (9, 8): 0, (9, 9): 2, (10, 0): 0, (10, 1): 0, (10, 2): 0, (10, 3): 3, (10, 4): 0, (10, 5): 0, (10, 6): 0, (10, 7): 2, (10, 8): 0, (10, 9): 0, (10, 10): 0, (11, 0): 0, (11, 1): 0, (11, 2): 0, (11, 3): 1, (11, 4): 2, (11, 5): 1, (11, 6): 2, (11, 7): 1, (11, 8): 3, (11, 9): 1, (11, 10): 3, (12, 0): 0, (12, 1): 0, (12, 2): 0, (12, 3): 3, (12, 4): 3, (12, 5): 3, (12, 6): 3, (12, 7): 3, (12, 8): 3, (12, 9): 3, (12, 10): 3, (13, 0): 2, (13, 1): 2, (13, 2): 2, (13, 3): 3, (13, 4): 0, (13, 5): 0, (13, 6): 0, (13, 7): 0, (13, 8): 0, (13, 9): 0, (13, 10): 0, (14, 0): 2, (14, 1): 2, (14, 2): 2, (14, 3): 3, (14, 4): 3, (14, 5): 3, (14, 6): 3, (14, 7): 3, (14, 8): 3, (14, 9): 3, (14, 10): 3, (15, 0): 0, (15, 1): 0, (15, 2): 0, (15, 3): 0, (15, 4): 0, (15, 5): 0, (15, 6): 0, (15, 7): 0, (15, 8): 0, (15, 9): 0, (15, 10): 0, (16, 0): 0, (16, 1): 0, (16, 2): 0, (16, 3): 0, (16, 4): 0, (16, 5): 0, (16, 6): 0, (16, 7): 0, (16, 8): 0, (16, 9): 0, (16, 10): 0, (17, 0): 0, (17, 1): 0, (17, 2): 0, (17, 3): 2, (17, 4): 0, (17, 5): 0, (17, 6): 0, (17, 7): 0, (17, 8): 0, (17, 9): 0, (17, 10): 0, (18, 0): 0, (18, 1): 0, (18, 2): 0, (18, 3): 1, (18, 4): 1, (18, 5): 1, (18, 6): 0, (18, 7): 0, (18, 8): 0, (18, 9): 1, (18, 10): 1, (19, 0): 0, (19, 1): 0, (19, 2): 0, (19, 3): 0, (19, 4): 0, (19, 5): 2, (19, 6): 0, (19, 7): 0, (19, 8): 0, (19, 9): 2, (19, 10): 0, (20, 0): 0, (20, 1): 0, (20, 2): 0, (20, 3): 0, (20, 4): 0, (20, 5): 0, (20, 6): 0, (20, 7): 0, (20, 8): 0, (20, 9): 0, (20, 10): 0, (21, 0): 2, (21, 1): 2, (21, 2): 2, (21, 3): 0, (21, 4): 0, (21, 5): 0, (21, 6): 0, (21, 7): 0, (21, 8): 0, (21, 9): 0, (21, 10): 0, (22, 0): 0, (22, 1): 0, (22, 2): 2, (22, 3): 0, (22, 4): 0, (22, 5): 0, (22, 6): 0, (22, 7): 0, (22, 8): 0, (22, 9): 1, (22, 10): 1, (23, 0): 0, (23, 1): 0, (23, 2): 2, (23, 3): 0, (23, 4): 0, (23, 5): 0, (23, 6): 0, (23, 7): 0, (23, 8): 0, (23, 9): 0, (23, 10): 0, (24, 0): 0, (24, 1): 0, (24, 2): 0, (24, 3): 0, (24, 4): 0, (24, 5): 0, (24, 6): 0, (24, 7): 0, (24, 8): 0, (24, 9): 0, (24, 10): 0, (25, 0): 0, (25, 1): 0, (25, 2): 0, (25, 3): 0, (25, 4): 0, (25, 5): 0, (25, 6): 0, (25, 7): 0, (25, 8): 0, (25, 9): 0, (25, 10): 0, (26, 0): 0, (26, 1): 0, (26, 2): 0, (26, 3): 0, (26, 4): 0, (26, 5): 0, (26, 6): 0, (26, 7): 0, (26, 8): 0, (26, 9): 0, (26, 10): 0, (27, 0): 0, (27, 1): 0, (27, 2): 0, (27, 3): 0, (27, 4): 0, (27, 5): 0, (27, 6): 0, (27, 7): 0, (27, 8): 0, (27, 9): 0, (27, 10): 0, (0, 10): 0, (1, 10): 0, (2, 10): 0, (3, 10): 3, (4, 10): 3, (5, 10): 0, (6, 10): 0, (7, 10): 1, (8, 10): 0, (9, 10): 0, (0, 11): 0, (1, 11): 0, (2, 11): 0, (3, 11): 3, (4, 11): 3, (5, 11): 0, (6, 11): 0, (7, 11): 1, (8, 11): 0, (9, 11): 2, (10, 11): 2, (11, 11): 1, (12, 11): 3, (13, 11): 3, (14, 11): 3, (15, 11): 0, (16, 11): 0, (17, 11): 2, (18, 11): 1, (19, 11): 0, (20, 11): 0, (21, 11): 0, (22, 11): 1, (23, 11): 1, (24, 11): 0, (25, 11): 0, (26, 11): 0, (27, 11): 0, (0, 12): 0, (1, 12): 0, (2, 12): 0, (3, 12): 0, (4, 12): 0, (5, 12): 0, (6, 12): 0, (7, 12): 0, (8, 12): 0, (9, 12): 0, (10, 12): 0, (11, 12): 0, (12, 12): 0, (13, 12): 0, (14, 12): 0, (15, 12): 0, (16, 12): 0, (17, 12): 0, (18, 12): 0, (19, 12): 0, (20, 12): 0, (21, 12): 2, (22, 12): 2, (23, 12): 0, (24, 12): 0, (25, 12): 0, (26, 12): 0, (27, 12): 0, (0, 13): 0, (1, 13): 0, (2, 13): 0, (3, 13): 0, (4, 13): 0, (5, 13): 0, (6, 13): 0, (7, 13): 0, (8, 13): 0, (9, 13): 0, (10, 13): 0, (11, 13): 0, (12, 13): 0, (13, 13): 0, (14, 13): 0, (15, 13): 0, (16, 13): 0, (17, 13): 0, (18, 13): 0, (19, 13): 0, (20, 13): 0, (21, 13): 2, (22, 13): 2, (23, 13): 0, (24, 13): 0, (25, 13): 0, (26, 13): 0, (27, 13): 0, (0, 14): 0, (1, 14): 0, (2, 14): 0, (3, 14): 1, (4, 14): 1, (5, 14): 1, (6, 14): 1, (7, 14): 3, (8, 14): 3, (9, 14): 1, (10, 14): 1, (11, 14): 1, (12, 14): 1, (13, 14): 0, (14, 14): 0, (15, 14): 0, (16, 14): 0, (17, 14): 0, (18, 14): 1, (19, 14): 1, (20, 14): 1, (21, 14): 1, (22, 14): 0, (23, 14): 0, (24, 14): 0, (25, 14): 0, (26, 14): 0, (27, 14): 0, (0, 15): 0, (1, 15): 0, (2, 15): 0, (3, 15): 0, (4, 15): 0, (5, 15): 3, (6, 15): 0, (7, 15): 0, (8, 15): 0, (9, 15): 0, (10, 15): 3, (11, 15): 0, (12, 15): 0, (13, 15): 0, (14, 15): 0, (15, 15): 0, (16, 15): 0, (17, 15): 0, (18, 15): 0, (19, 15): 0, (20, 15): 0, (21, 15): 1, (22, 15): 0, (23, 15): 0, (24, 15): 0, (25, 15): 0, (26, 15): 0, (27, 15): 0, (0, 16): 0, (1, 16): 0, (2, 16): 0, (3, 16): 0, (4, 16): 0, (5, 16): 3, (6, 16): 0, (7, 16): 0, (8, 16): 0, (9, 16): 0, (10, 16): 3, (11, 16): 0, (12, 16): 0, (13, 16): 0, (14, 16): 0, (15, 16): 0, (16, 16): 0, (17, 16): 0, (18, 16): 0, (19, 16): 0, (20, 16): 0, (21, 16): 0, (22, 16): 0, (23, 16): 0, (24, 16): 0, (25, 16): 0, (26, 16): 0, (27, 16): 0, (0, 17): 0, (1, 17): 0, (2, 17): 0, (3, 17): 0, (4, 17): 0, (5, 17): 3, (6, 17): 0, (7, 17): 0, (8, 17): 0, (9, 17): 0, (10, 17): 3, (11, 17): 0, (12, 17): 0, (13, 17): 0, (14, 17): 0, (15, 17): 0, (16, 17): 0, (17, 17): 0, (18, 17): 0, (19, 17): 0, (20, 17): 0, (21, 17): 0, (22, 17): 0, (23, 17): 0, (24, 17): 0, (25, 17): 0, (26, 17): 0, (27, 17): 0, (0, 18): 0, (1, 18): 0, (2, 18): 0, (3, 18): 0, (4, 18): 0, (5, 18): 0, (6, 18): 0, (7, 18): 0, (8, 18): 0, (9, 18): 0, (10, 18): 0, (11, 18): 0, (12, 18): 0, (13, 18): 0, (14, 18): 0, (15, 18): 0, (16, 18): 0, (17, 18): 0, (18, 18): 0, (19, 18): 0, (20, 18): 0, (21, 18): 0, (22, 18): 0, (23, 18): 0, (24, 18): 0, (25, 18): 0, (26, 18): 0, (27, 18): 0}
"""
if __name__ != '__main__':
    root.mainloop()
